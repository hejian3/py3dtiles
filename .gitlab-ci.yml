stages:
  - ðŸ¤ž test
  - ðŸš€ deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

.pre-commit-check:
  image:
    name: python:3.10
  variables:
    PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit
  cache:
    - paths:
      - ${PRE_COMMIT_HOME}
    - paths:
      - ${PIP_CACHE_DIR}
  before_script:
    - pip install pre-commit
    - pre-commit install -c .pre-commit-config.yaml
  only:
    refs:
      - merge_requests
      - develop
      - tags
      - master

# -- TEST JOBS --------------------------------------------------------------------------
test:
  stage: ðŸ¤ž test
  image:
    name: python:$PYTHON_VERSION-slim
  cache:
    - paths:
      - ${PIP_CACHE_DIR}
  before_script:
    - apt update
    - apt install -y pdal llvm
    - pip install -U pip setuptools wheel
  script:
    - pip install .[dev]
    - pytest
    # TODO move that in unit tests
    - py3dtiles info tests/fixtures/pointCloudRGB.pnts
  artifacts:
    when: always
    paths:
      - coverage.xml
      - junit/test-results.xml
    reports:
      junit: junit/test-results.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  only:
    refs:
      - merge_requests
      - develop
      - tags
      - master
  parallel:
    matrix:
      - PYTHON_VERSION: ['3.8', '3.9', '3.10']

3d-tiles-validator:
  stage: ðŸ¤ž test
  image:
    name: node:18
  cache:
    - key: 3d-tiles-validator
      paths:
        - laz/
    - paths:
      - ${PIP_CACHE_DIR}
  before_script:
    - apt update
    - apt install -y python3-pip pdal llvm liblaszip8
    - pip install .
    - pip install laspy[laszip]
    - wget -nv -N -P laz https://download.data.grandlyon.com/files/grandlyon/imagerie/mnt2018/lidar/laz/1843_5175.laz
    - wget -nv -N -P laz https://download.data.grandlyon.com/files/grandlyon/imagerie/mnt2018/lidar/laz/1845_5173.laz
    - git clone --depth 1 https://github.com/CesiumGS/3d-tiles-validator
    - cd 3d-tiles-validator
    - npm install
    - mkdir tilesets
  script:
    # Convert the 2 las files
    - py3dtiles convert ../laz/1843_5175.laz --out tilesets/1
    - py3dtiles convert ../laz/1845_5173.laz --out tilesets/2
    # Validate the first one
    - npx ts-node src/main.ts --tilesetsDirectory tilesets/1 | tee validator-output.txt
    - grep \"numErrors\"\:\ 0 validator-output.txt | wc -l | grep 4
    - grep \"numWarnings\"\:\ 0 validator-output.txt | wc -l | grep 4
    # Validate the second one to be sure the 2 las are valid
    - npx ts-node src/main.ts --tilesetsDirectory tilesets/2 | tee validator-output.txt
    - grep \"numErrors\"\:\ 0 validator-output.txt | wc -l | grep 1
    - grep \"numWarnings\"\:\ 0 validator-output.txt | wc -l | grep 1
    # Merge the 2 tilesets and validate the result
    - py3dtiles merge tilesets
    - npx ts-node src/main.ts --tilesetsDirectory tilesets | tee validator-output.txt
    - grep \"numErrors\"\:\ 0 validator-output.txt | wc -l | grep 6
    - grep \"numWarnings\"\:\ 0 validator-output.txt | wc -l | grep 6
  only:
    refs:
      - merge_requests
      - develop
      - tags
      - master
    changes:
      - "**/*.py"

sonarcloud-check:
  stage: ðŸ¤ž test
  needs: [test]
  image:
    name: sonarsource/sonar-scanner-cli:latest
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    refs:
      - merge_requests
      - develop
      - tags
      - master
    changes:
      - "**/*.py"

# -- DEPLOY JOBS -------------------------------------------------------------------------
pages:
  stage: ðŸš€ deploy
  image: python:3.10
  script:
    - pip install .[doc]
    # sphinx-multiversion needs to have all the branches
    - git fetch
    - sphinx-multiversion docs public
    - cp -rv docs/index_redirect.html public/index.html
    - current_version="$(git tag --list | tail -n1)"
    - sed -i "s/VERSION/$current_version/g" public/index.html
  artifacts:
    paths:
      - public
  only:
    - master
    - tags
